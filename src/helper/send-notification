#!/bin/bash

#===================================================================================
#
# FILE: send-notification
#
# USAGE: .send-notification file-path mail_from mail_to log_file_path
#   	 e.g. send-notification ${HOME}/app-monitor/report/monitoring_report_2018-01-21.html sender@gmail.com receiver@gmail.com ${HOME}/app-monitor/log/logfile
#
# DESCRIPTION: Post health checkup email reports to concern team
# The default starting directory is the current directory.
# Script need 4 arguments report file path, sender email id, receiver email id , log file path
#
# REQUIREMENTS: Application team needs to be notified after application health check.
#
# NOTES: ---
# AUTHOR: Kavita Sanap
#
#===================================================================================

#=== FUNCTION ======================================================================
# NAME: usage
# DESCRIPTION: Display the usage information for this script.
#===================================================================================
usage()
{
	log "No arguments provided with the script. Script need 4 args to send email notification.
		 e.g. send-notification ${HOME}/AppMonitor/report/monitoring_report_2018-01-21.html sender@gmail.com receiver@gmail.com"

	cat <<- EOT
		 USAGE: 
		 Post health checkup email reports to concern team.
		 .send-notification file-path mail_from mail_to
    	 e.g. send-notification ${HOME}/AppMonitor/report/monitoring_report_2018-01-21.html sender@gmail.com receiver@gmail.com
	EOT
		
}

#=== FUNCTION ======================================================================
# NAME: init
# DESCRIPTION: initialize all the required variables.
#===================================================================================
init()
{
	from_name="Monitoring Team"
	
}


#=== FUNCTION ======================================================================
# NAME: log
# DESCRIPTION: log all the messages which cab be use trouble shooting
#			   in case of script issues. 
#===================================================================================
log()
{
	echo "send-notification: `date '+%Y-%m-%d %H:%M:%S'`==>$1" >> $log_file
}

#=== FUNCTION ======================================================================
# NAME: send_email
# DESCRIPTION: Use SendGrid api to send health check status metrics to receiver 
# PARAMETER $1: absolute html report file path
#		    $2: sender email address
#		    $3: receiver email address
#		    $4: log file path
#===================================================================================
send_email()
{
	
	if [[ "$#" != 4 ]]; then 	#if all 4 args not provided
		usage
		exit 1
	fi  
	
	html_report="$1" 		 
	mail_from="$2"  		
	mail_to="$3"    		 
	log_file="$4"			
	
	subject=`echo $html_report |  awk -F/ '{print $NF}'`
	
	log "Sending notification Monitoring Report $subject"
	
	body_html=`tr -d '\n\r' < $html_report` # remove CR (Carriage Return) & LF (Line Feed) as it throws parsing error. 

	maildata='{"personalizations": [{"to": [{"email": "'${mail_to}'"}]}],"from": {"email": "'${mail_from}'", 
		"name": "'${from_name}'"},"subject": "'${subject}'","content": [{"Disposition": "inline","type": "text/html", "value": "'${body_html}'"}]}'
	
	log "$maildata"
	
	#Sent email using sendgrid curl APIS
	curl --request POST \
	--url https://api.sendgrid.com/v3/mail/send \
	--header 'Authorization: Bearer '$SENDGRID_API_KEY \
	--header 'Content-Type: application/json' \
	--data "'$maildata'"

	result=$?
	
	if [ "${result}" -eq "0" ] ; then   #Check exit code for error
		log "`date`: Notification sent successfully, everything is fine"
	else
		log "Notification emailed failed with ${result}"
		exit 1
	fi
	
}

init
send_email $@